# Daniel Alabi and Cody Wang
# knearest2.py

# Steps:
# 1. Define methods euclidean and manhattan
#    that should both take in two lists and returns
#    a value that corresponds to what we want.
# 2. Define a method that takes in a record and k
#    and then returns the k nearest neighbors (k nearest 
#    records).
# 3. For each record, call 2
# 3, then 2, then 1


if __name__ == "__main__":
    data = []
    header = []
    with open("StandardizedExcelSheet.csv") as f:
        header = f.readline().split(",")
        for line in f.readlines():
            data.append(line.split(","))
    k = 5
    # knearests returns a list of list of k nearest neighbors
    # so len(knearests)  == len(data)
    kns = knearests(k, data, range(1, len(data[0])-1))
